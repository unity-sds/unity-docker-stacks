name: Build Unity Docker Stacks

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# 
# Based on:
# https://github.com/actions/starter-workflows/blob/main/ci/docker-publish.yml

on:
  push:
    branches: [ "main", "test" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io

jobs:

  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    outputs:
      # Expose matched filters as job 'stacks' output variable
      stacks: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        # Modify the list of Stacks here as they are added
        # Note that sounder_sips_dev is left out because it takes a large amount of resources to run
        #
        # In the filters below, the key should be the same as the directory name of the Stack
        # Additionally, the Dockerfile in the stack directory should work from the root context
        # to allow inclusion of common files
        filters: |
          unity_datascience: 
            - 'unity_datascience/**'
            - 'common/**'
            - '.github/workflows/**'
            - '.env'
          vtls_dev:
            - 'vtls_dev/**'
            - 'common/**'
            - '.github/workflows/**'
            - '.env'
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    needs: changes
    if: ${{ needs.changes.outputs.stacks != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files
        # e.g. ['package1', 'package2'] if both package folders contains changes
        stack: ${{ fromJSON(needs.changes.outputs.stacks) }}

    steps:

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: DotEnv file
        id: dotenv
        uses: xom9ikk/dotenv@v2

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.3.0
        with:
          cosign-release: 'v2.2.2' # optional

      # GitHub Action to set up Docker Buildx.
      # https://github.com/docker/setup-buildx-action
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ matrix.stack }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}},value=${{ env.DOCKER_TAG }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          file: ${{ matrix.stack }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Tag as latest
        uses: Actions-R-Us/actions-tagger@v2
        with:
          publish_latest_tag: true
